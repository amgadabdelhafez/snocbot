<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_94469_snoc_bot.WatsonChatUtil</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>WatsonChatUtil</name>
        <script><![CDATA[var WatsonChatUtil = Class.create();
WatsonChatUtil.prototype = {
    initialize: function(vaConstants, i18n) {
		this.vaConstants = vaConstants;
		this.i18n = i18n;
		this.logDurationStatement = gs.getProperty(this.vaConstants.DEBUG_WATSON_DURATION, this.vaConstants.DEFAULT_DEBUG_WATSON_DURATION); 
	},
	
	getConversationSummary: function(context, text) {
		var summary = '';
		var firstRecord = true;
		
		if (!context || !context.conversation_id || !context.sn.bot) 
			return summary;

		// Generate conversation history
		var gr = new GlideRecord(this.vaConstants.IBM_VA_CONV_LOG);
		gr.addQuery(this.vaConstants.CONV_ID, context.conversation_id);
		gr.orderBy(this.vaConstants.SEQUENCE);
		gr.query();			

		while (gr.next()) {	
			// We want to add the title only for the first time
			if (firstRecord) {
				summary = this.i18n.getMessageLang('Conversation History:'); 
				firstRecord = false;
			}
			
			var inputMesage = gr.getValue(this.vaConstants.INPUT_MESSAGE);
			var outputMessage = gr.getValue(this.vaConstants.OUTPUT_MESSAGE);

			if (inputMesage)
				summary += (summary ? '\n' : '') + gr.getDisplayValue(this.vaConstants.SYS_CREATED_ON) + ': ' + gr.getDisplayValue(this.vaConstants.USER) + ': ' + inputMesage;

			if (outputMessage)
				summary += (summary ? '\n' : '') + gr.getDisplayValue(this.vaConstants.SYS_CREATED_ON) + ': ' + context.sn.bot.name + ': ' + outputMessage;

			// Adding the last user input message to summary
			if (!gr.hasNext() && text) 
				summary += (summary ? '\n' : '') + new GlideDateTime().getDisplayValue() + ': ' + gr.getDisplayValue(this.vaConstants.USER) + ': ' + text;
		}

		return summary;
	},

	currentTimeMillis: function() {
			return new Date();
	},

	logDuration: function(component, start, end) {
		if (gs.isDebugging() && this.logDurationStatement)
			gs.debug(this.i18n.getMessageLang('Time taken by {0} is : {1} ms', [component, (end - start)]));
	},

    type: 'WatsonChatUtil'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-05-19 16:48:20</sys_created_on>
        <sys_id>266b5aa3db821300c7aaaab35b9619c4</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>WatsonChatUtil</sys_name>
        <sys_package display_value="SNOC Bot" source="x_94469_snoc_bot">40119227db021300c7aaaab35b96196f</sys_package>
        <sys_policy/>
        <sys_scope display_value="SNOC Bot">40119227db021300c7aaaab35b96196f</sys_scope>
        <sys_update_name>sys_script_include_266b5aa3db821300c7aaaab35b9619c4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-05-19 16:48:25</sys_updated_on>
    </sys_script_include>
</record_update>
